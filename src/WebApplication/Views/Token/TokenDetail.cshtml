@model Security.Core.Models.TokenResponse

@{
    ViewData["Title"] = "Token Detail";
}

<div>
    <h4>Token Response</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.IdToken)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.IdToken)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.TokenType)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.TokenType)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.NotBefore)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.NotBefore)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.IdTokenExpiresIn)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.IdTokenExpiresIn)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.RefreshToken)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.RefreshToken)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.RefreshTokenExpiresIn)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.RefreshTokenExpiresIn)
        </dd>
    </dl>
</div>
<div>
    <a class="btn btn-secondary" target="_blank" href="@Url.Action("Claims", "Token", new {token=Model.IdToken})">Decode Token</a>
    <a class="btn btn-info" target="_blank" href="https://jwt.ms#id_token=@Model.IdToken">Decode Token (jwt.ms)</a>
    <a class="btn btn-warning" href="@Url.Action("RefreshToken", "Token", new {refreshToken = Model.RefreshToken})">Refresh Token</a>
</div>